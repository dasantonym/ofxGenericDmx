TODO porting and branch integration
- create script to compile libraries in w32 (build libftdi with cmake -> see pull rq)
- recheck if vs2010 project still works
- create working CB project in w32
- make sure project files for osx/linux/w32:vs2010/w32:cb are all present in example and work properly (the latter should be true at this point)
- (check why this works --> perhaps because of the dep change?) does libftdi on w32 really not use libusb-compat?? it doesn't seem to but it must, right?
- follow guidelines here (http://ofxaddons.com/howto) as good as possible and optimize addon for the site


TODO
- move out build settings to .xcconfig to reduce changes to the project file itself (<http://b2cloud.com.au/tutorial/using-a-xcconfig-file/>)
- libftdi on git (git@github.com:woutgg/ofxGenericDmx.git) links to libusb(x) 1.0. change to custom build so libusb-compat can be dropped?
- Add v0.1 mark, copyright, etc.
- only tested on 10.6 & of0061 (and at least the libftdi in the d2xx driver does not work on 10.6 due to a libusb0.1 bug (which libftdi is linked against))
- search oF forum to find all dmx addons and their mods in order to cover their collective support
  (would probably mean adding serial/vcp support and maybe dmx512 support as well)
- adapt for serial communication: create SerialHwChannel with subclasses VcpChannel and FtdiChannel(currently FtdiDevice)
  then adapt DmxDevice and subclasses to use the interface instead of FtdiDevice/FtdiChannel
- Maybe move subclasses to subdirectory (although ofxOsc, for instance, does not do so)
- Add proper documentation to code.
- decide how to handle the start code (it's probably fine the way it is)
- see if any of these help sorting out xcode project differences:
  * <https://github.com/simonwagner/mergepbx/>
  * <http://danieltull.co.uk/blog/2013/09/05/easier-merging-of-xcode-project-files/>

linux C::B project setup:
 -add files to project
 -add ftdi usb and usb-1.0 to libraries in linker settings (in that order!)
 -add paths to all three library directories in linker tab of search directories
 -there might be a more elegant/practical way
 -maybe just add an example including working codeblocks project for linux and windows as well as an xcode project
